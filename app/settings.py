"""
Django settings for djangoexample project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
from celery.schedules import crontab
from kombu import (
    Queue,
    Exchange,
    )

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4ikrsbaak(y1o$+pnxa9a!6wv(dqomna-9%k*_s)-8sf8q42ae'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'rewritebody.django.RwriteBodyMiddleware',
)

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'HOST': os.environ['DATABASE_DEFAULT_HOST'],
        'PORT': os.environ['DATABASE_DEFAULT_PORT'],
        'NAME': os.environ['DATABASE_DEFAULT_NAME'],
        'USER': os.environ['DATABASE_DEFAULT_USER'],
        'PASSWORD': os.environ['DATABASE_DEFAULT_PASSWORD'],
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# for celery
CELERY_TIMEZONE = TIME_ZONE
BROKER_URL = os.environ['BROKER_URL']
CELERY_RESULT_BACKEND = os.environ['CELERY_RESULT_BACKEND']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_ALWAYS_EAGER = False
CELERY_SEND_EVENTS = True
CELERY_SEND_TASK_SENT_EVENT = True
CELERY_ENABLE_UTC = False
CELERY_ACKS_LATE = True
CELERYD_PREFETCH_MULTIPLIER = 1
BROKER_TRANSPORT_OPTIONS = {'fanout_patterns': True, 'visibility_timeout': 10 * 60}
CELERY_TASK_RESULT_EXPIRES = 18000
CELERYD_HIJACK_ROOT_LOGGER = False
CELERYD_LOG_FORMAT = "%(asctime)s\t%(levelname)s\t%(processName)s\t%(message)s"
CELERYD_TASK_LOG_FORMAT = "%(asctime)s\t%(levelname)s\t%(processName)s\t%(task_name)s\t%(task_id)s\t%(message)s"  # noqa
CELERY_DISABLE_RATE_LIMITS = True

# for celery beat
CELERYBEAT_SCHEDULE = {
    'debug_task': {
        'task': 'app.celery.debug_task',
        'schedule': crontab(minute='*/2'),
        'args': (),
    },
}

# for celery routing
CELERY_QUEUES = [
    Queue('default', Exchange('default', type='direct'), routing_key='default'),
    Queue('debug', Exchange('debug', type='direct'), routing_key='debug'),
]
CELERY_DEFAULT_QUEUE = 'default'
CELERY_DEFAULT_EXCHANGE = 'default'
CELERY_DEFAULT_ROUTING_KEY = 'default'
CELERY_ROUTERS = [{
    'app.celery.debug_task': {
        'queue': 'debug',
        'routing_key': 'debug',
    },
}]


# for celery once
ONCE_REDIS_URL = os.environ['ONCE_REDIS_URL']
ONCE_DEFAULT_TIMEOUT = 10

# for requests
VERIFY_SSL = False if DEBUG else True

# for rewritebody
REWRITEBODY_PAIRS = [
    (b'</body>', os.environ.get('ENV_TAG', '').encode()),  # noqa
]
